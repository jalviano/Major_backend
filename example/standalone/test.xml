<project name="StandaloneBackend" default="test" basedir=".">

    <property name="dir.cov" value="coverage_results"/>
    <property name="major" value="../../bin/javac"/>
    <property name="config" value="../../config/config.jar"/>
    <property name="junit" value="../../lib/junit-4.11.jar"/>
    <property name="cobertura" value="../../lib/cobertura-2.0.3.jar"/>

    <!-- Configuration for Cobertura -->
    <path id="cobertura.classpath">
        <fileset dir="../../lib">
            <include name="cobertura-2.0.3.jar"/>
            <include name="cobertura-lib/**/*.jar"/>
        </fileset>
    </path>
    <taskdef classpathref="cobertura.classpath" resource="tasks.properties"/>

    <!-- Target to clean up -->
    <target name="clean" description="Clean">
        <delete>
            <fileset dir="." includes="*.ser"/>
        </delete>
        <delete dir="${dir.cov}"/>
        <delete dir="bin"/>
        <delete dir="target"/>
        <delete dir=".instrumented"/>
    </target>

    <!-- Target to initialize build -->
    <target name="init">
        <mkdir dir="bin/main"/>
        <mkdir dir="bin/test"/>
        <mkdir dir="target/main"/>
        <mkdir dir="target/test"/>
        <mkdir dir=".instrumented"/>
    </target>

    <!-- Target to compile the project -->
    <target name="project.compile"
            description="Compile"
            depends="clean,init">
        <javac includeantruntime="true"
               srcdir="triangle/src/triangle"
               destdir="bin/main"
               source="1.7"
               target="1.7"
               compiler="javac1.7"
               debug="yes"
               fork="yes">
        </javac>
    </target>

    <!-- Target to compile the project test suite -->
    <target name="project.compile.tests"
            description="Compile all tests"
            depends="project.compile">
        <javac includeantruntime="true"
               srcdir="triangle/test/triangle/test"
               destdir="bin/test"
               source="1.7"
               target="1.7"
               compiler="javac1.7"
               debug="yes">
            <classpath>
                <pathelement path="bin/main"/>
                <pathelement location="${junit}"/>
            </classpath>
            <compilerarg value="-Xlint:none"/>
        </javac>
    </target>

    <!-- Target to compile the analysis backend -->
    <target name="backend.compile" description="Compile mutation analysis backend">
        <javac includeantruntime="true"
               srcdir="src"
               destdir="target/main"
               source="1.7"
               target="1.7"
               compiler="javac1.7"
               debug="yes"
               executable="${major}">
            <compilerarg value="-Xlint:none"/>
            <classpath>
                <pathelement location="${config}"/>
                <pathelement location="${junit}"/>
            </classpath>
        </javac>
    </target>

    <!-- Target to compile the backend test suite -->
    <target name="backend.compile.tests"
            description="Compile all tests"
            depends="backend.compile">
        <javac includeantruntime="true"
               srcdir="test"
               destdir="target/test"
               source="1.7"
               target="1.7"
               compiler="javac1.7"
               nowarn="true"
               debug="yes">
            <classpath>
                <pathelement path="target/main"/>
                <pathelement location="${junit}"/>
            </classpath>
            <compilerarg value="-Xlint:none"/>
        </javac>
    </target>

    <!-- Target to run the backend tests -->
    <target name="test"
            description="Run all unit test cases"
            depends="backend.compile.tests">
        <junit printsummary="true"
               showoutput="true"
               fork="true"
               haltonfailure="true">
            <formatter type="plain" usefile="false"/>
            <classpath>
                <pathelement path=".instrumented"/>
                <pathelement path="target/main"/>
                <pathelement path="target/test"/>
                <pathelement location="${config}"/>
                <pathelement location="${junit}"/>
                <pathelement location="${cobertura}"/>
            </classpath>
            <batchtest fork="true">
                <fileset dir="test">
                    <include name="**/*Test*.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <!-- Get coverage information -->
    <target name="coverage" description="Run coverage analysis">
        <antcall target="backend.compile"/>
        <cobertura-instrument failOnError="true" toDir=".instrumented">
            <fileset dir="target/main">
                <include name="**/*.class"/>
            </fileset>
        </cobertura-instrument>
        <antcall target="test"/>
        <delete dir="${dir.cov}"/>
        <mkdir dir="${dir.cov}"/>
        <cobertura-report format="html"
                          destdir="${dir.cov}"
                          srcdir="src"/>
        <cobertura-report format="summaryXml"
                          destdir="${dir.cov}"
                          srcdir="src"/>
    </target>

</project>
